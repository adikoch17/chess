{"version":3,"sources":["components/chessgame/chessgame.jsx","components/join/join.jsx","components/chat/msg/msg.jsx","components/chat/chat.jsx","pages/gamepage/gamepage.jsx","pages/createorjoin/createorjoin.jsx","App.js","index.js"],"names":["ChessGame","props","onDrop","sourceSquare","targetSquare","socket","emit","room","state","resetGame","setOrientation","isWhite","checkWidth","w","h","width","setState","showWinner","gameOver","console","log","id","winner","onClick","fen","myturn","roomid","this","game","Chess","isCreator","getColor","on","data","move","from","to","promotion","game_over","color","position","transitionDuration","draggable","orientation","calcWidth","screenWidth","screenHeight","React","Component","Join","changeRoute","enterRoom","useState","setRoom","useEffect","uuidv4","onIdInputChange","event","value","target","type","onChange","showIdToShare","Msg","message","style","fontWeight","opacity","timestamp","Chat","inp","setInp","messageList","setMessageList","temp","push","map","messageItem","i","e","document","getElementById","keyCode","preventDefault","now","Date","toLocaleTimeString","className","GamePage","route","setRoute","setRoomId","playerColor","setPlayerColor","rmid","clr","CreateOrjoin","setCreator","io","connect","withCredentials","App","setIsCreator","crt","rt","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.554917bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport Chessboard from 'chessboardjsx'\r\nimport Chess from  \"chess.js\";\r\nimport './chessgame.css'\r\n\r\n\r\n\r\nclass ChessGame extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fen:'start',\r\n            myturn:true,\r\n            isWhite:false,\r\n            room:this.props.roomid,\r\n            width:560,\r\n            winner:'',\r\n            gameOver:'false'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.game = new Chess();\r\n        this.setState({isWhite:this.props.isCreator,myturn:this.props.isCreator});\r\n        this.props.getColor(this.state.isCreator)\r\n        this.props.socket.on('reset-from-server',data=>{\r\n          if(data==='reset'){\r\n            this.game = new Chess();\r\n            this.setState({fen:this.game.fen()});\r\n            this.setState({myturn:this.state.isWhite});\r\n            this.setState({winner:''});\r\n            this.setState({myturn:false,gameOver:'false'});\r\n          }\r\n        })\r\n        this.props.socket.on('move-from-server',data =>{\r\n          console.log(data);\r\n          var sourceSquare = data.sourceSquare;\r\n          var targetSquare = data.targetSquare;\r\n          let move = this.game.move({\r\n            from: sourceSquare,\r\n            to: targetSquare,\r\n            promotion: \"q\" // always promote to a queen for example simplicity\r\n          });\r\n          console.log(move);\r\n          if(move !== null){\r\n            this.setState({myturn:!this.state.myturn})\r\n          }\r\n          if(this.game.game_over()){\r\n            console.log(\"checkmate\",move.color);\r\n            if(move.color==='w'){\r\n              this.setState({winner:'White'});\r\n              \r\n            }\r\n            else if(move.color==='b'){\r\n              this.setState({winner:'Black'});\r\n            }\r\n            this.setState({myturn:false,gameOver:'true'});\r\n          }\r\n          // illegal move\r\n          if (move === null) return;\r\n          this.setState({fen:this.game.fen()});\r\n        })\r\n      }\r\n\r\n    onDrop = ({ sourceSquare, targetSquare }) => {\r\n      this.props.socket.emit('move',[{sourceSquare:sourceSquare,targetSquare:targetSquare},{room:this.state.room}]);\r\n      };\r\n      \r\n      resetGame =  () =>{\r\n        this.props.socket.emit('reset',this.state.room)\r\n      }\r\n\r\n      setOrientation = (isWhite) =>{\r\n        if(isWhite){\r\n          return 'white';\r\n        }\r\n        else{\r\n          return 'black';\r\n        }\r\n      }\r\n\r\n    checkWidth =(w,h)=>{\r\n      if(this.state.width>=560){\r\n        if(w<560){\r\n          this.setState({width:300})\r\n        }\r\n      }\r\n      if(this.state.width<560){\r\n        if(w>560){\r\n          this.setState({width:560})\r\n        }\r\n      }\r\n    }\r\n\r\n    showWinner = ()=>{\r\n      if(this.state.gameOver==='true'){\r\n        console.log('you won')\r\n        return(\r\n          <div id=\"winnerModal\">\r\n            <div id=\"winnerCont\">\r\n               <h1>{this.state.winner} has won!</h1>\r\n               <button id=\"newGame\" onClick={this.resetGame}>new game</button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    render(){\r\n        \r\n    return(\r\n        <div>\r\n            <Chessboard \r\n            position={this.state.fen} \r\n            transitionDuration={0}\r\n            onDrop={this.onDrop}\r\n            draggable={this.state.myturn}\r\n            orientation ={this.setOrientation(this.state.isWhite)}\r\n            calcWidth = {({ screenWidth:w, screenHeight: h })=>{this.checkWidth(w,h)}}\r\n            width = {this.state.width}\r\n            />\r\n            <button onClick={this.resetGame}>reset</button> \r\n            {\r\n              this.showWinner()\r\n            }\r\n        </div>\r\n     );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ChessGame;","import React, { useEffect, useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport './join.css'\r\n\r\n\r\nconst Join  =({changeRoute,isCreator,enterRoom,socket}) =>{\r\n    \r\n    const [room,setRoom] = useState('');\r\n    useEffect(()=>{\r\n        if(isCreator){\r\n            setRoom(uuidv4());\r\n            \r\n        }\r\n    },[]);\r\n\r\n    const onIdInputChange = (event) =>{\r\n        var value = event.target.value;\r\n        setRoom(value);\r\n    }\r\n\r\n    const onClickJoin = () =>{\r\n        socket.emit('room',room);\r\n        enterRoom(room);\r\n        changeRoute('game');\r\n    }\r\n\r\n    const showIdToShare = (isCreator) =>{\r\n        if(isCreator){\r\n            return <div id=\"code\">share this code with your friend <br/> <b>{room}</b></div>\r\n        }\r\n        else{\r\n            return <div><input type=\"text\" id=\"roomId\" onChange={onIdInputChange}/></div>\r\n        }\r\n    }\r\n    return(\r\n        <div id=\"join\">\r\n            {\r\n                showIdToShare(isCreator)\r\n            }\r\n            <button onClick ={onClickJoin} id=\"joinbtn\">Join</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join;","import React from  'react'\r\n\r\n\r\nconst Msg = ({message}) =>{\r\n    return(\r\n        <div>\r\n        <p><b>{message.color} :</b> <span style={{fontWeight:\"300\"}}>{message.data} <span style={{opacity:0.2}}>({message.timestamp})</span></span></p>\r\n        {/* <p>{message.color+'('+message.timestamp+')'} : {message.data} </p> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Msg;","import React,{useState,useEffect} from 'react'\r\nimport Msg from './msg/msg'\r\nimport './chat.css'\r\n\r\nconst Chat = ({socket,color,roomid}) =>{\r\nconst [inp,setInp] = useState('');\r\nconst [messageList,setMessageList] = useState([]);\r\n\r\nuseEffect(()=>{\r\n    socket.on('message-from-server',data =>{\r\n        console.log(data,'socket');\r\n        var temp = messageList;\r\n        temp.push(data);\r\n        setMessageList([...temp]);\r\n        console.log(messageList);\r\n    })\r\n},[])\r\n\r\nconst onChatInputChange = (event) =>{\r\n    let value = event.target.value;\r\n    setInp(value);\r\n    console.log(inp);\r\n}\r\n\r\nconst onCLickSend = (e) =>{\r\n    document.getElementById('inpField').value='';\r\n    if (e. keyCode == 13) {\r\n        e. preventDefault();\r\n        }\r\n    e.preventDefault();\r\n    let now = new Date().toLocaleTimeString();\r\n    socket.emit('message',{room:roomid,message:{color:color,data:inp,timestamp:now}})\r\n    console.log('click')\r\n}\r\n\r\nreturn(\r\n    <div id=\"chatComp\">\r\n        <div id=\"messagesCont\">\r\n        <div id=\"headingChat\"><h1>Chat</h1></div>\r\n        <div id=\"messages\">\r\n\r\n            {   \r\n                messageList.map((messageItem,i)=>{\r\n                   return(<Msg key = {i} message={messageItem}/>);           \r\n                })\r\n            }\r\n         </div>   \r\n        </div>\r\n        <div id=\"form\">\r\n            <form>\r\n            <input type=\"text\" onChange = {onChatInputChange} id=\"inpField\" />\r\n            <button onClick={onCLickSend} className=\"primary\">SEND</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default Chat;","import React, { useState,useEffect } from 'react';\r\nimport ChessGame from '../../components/chessgame/chessgame';\r\nimport Join from '../../components/join/join';\r\nimport Chat from '../../components/chat/chat';\r\nimport './gamepage.css'\r\n\r\nconst GamePage = ({isCreator,socket}) =>{\r\n    const [route,setRoute] = useState('join');\r\n    const [roomid,setRoomId] = useState('');\r\n    const [playerColor,setPlayerColor] = useState('');\r\n\r\n    useEffect(()=>{\r\n        if(playerColor===''){\r\n            if(isCreator){\r\n                setPlayerColor('white');\r\n            }\r\n            else{\r\n                setPlayerColor('black');\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const changeRoute = (route) =>{\r\n        setRoute(route);\r\n    }\r\n\r\n    const enterRoom = (rmid) =>{\r\n        setRoomId(rmid)\r\n    }\r\n\r\n    const getColor = (clr) =>{\r\n\r\n        if(clr===true){\r\n            setPlayerColor('white')\r\n        }\r\n        else if(clr===false){\r\n            setPlayerColor('black')\r\n        }\r\n    }\r\n\r\n    if(route==='join'){\r\n        return(\r\n            <div >\r\n                <Join changeRoute={changeRoute} isCreator={isCreator} enterRoom={enterRoom} socket={socket}/>\r\n            </div>\r\n        )\r\n    }\r\n    else if(route==='game'){\r\n        return(\r\n            <div id=\"gameCont\">\r\n                <ChessGame isCreator = {isCreator} socket={socket} roomid={roomid} getColor={getColor}/>\r\n                <Chat socket={socket} color={playerColor} roomid={roomid}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GamePage;","import React from 'react'\r\nimport './coj.css'\r\n\r\n\r\nconst CreateOrjoin = ({setCreator,changeRoute}) =>{\r\n\r\n    const onClickCreateGame = () =>{\r\n        setCreator(true);\r\n        changeRoute('game')\r\n    }\r\n    const onClickJoinGame = () =>{\r\n        setCreator(false);\r\n        changeRoute('game')\r\n    }\r\n\r\n    return(\r\n        <div id=\"coj\">\r\n        <button onClick={onClickCreateGame} className=\"primary\">create game</button>\r\n        <button onClick={onClickJoinGame} className=\"secondary\">join game</button>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateOrjoin;","import React , {useState} from 'react'\nimport './App.css';\nimport GamePage from './pages/gamepage/gamepage'\nimport CreateOrjoin from './pages/createorjoin/createorjoin';\nimport io from 'socket.io-client'\n\nconst socket = io.connect('https://chessreact-server.herokuapp.com',{\n  withCredentials: true\n  });\n\nexport const sockContext = React.createContext();\n\nconst App = () => {\n\n\n  const [route,setRoute] = useState('land');\n  const [isCreator,setIsCreator] = useState(false)\n\n  \n\n  const changeRoute = (rt) =>{\n    setRoute(rt);\n  }\n\n  const changeIsCreator = (crt) =>{\n    setIsCreator(crt);\n  }\n\n  if(route==='land'){\n    return(\n      <div className=\"App\">\n        <CreateOrjoin setCreator={changeIsCreator} changeRoute={changeRoute}/>\n      </div>\n    );\n  }\n  else if(route==='game'){\n    return(\n      <div className=\"App\">\n        <GamePage isCreator={isCreator} socket ={socket}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div className=\"App\">\n        <h2>Oops an error occurred</h2>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n\n\n// component={CreateOrjoin} \n// component={GamePage}\n\n// return (\n//   <div className=\"App\">\n//    <Router>\n//      <Route path='/' exact  render = {(props)=><CreateOrjoin {...props} setCreator = {setCreator}/>}/>\n//      <Route path='/game' render = {(props)=><GamePage {...props} isCreator = {isCreator}/>}/>\n//    </Router>\n//   </div>\n// );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}